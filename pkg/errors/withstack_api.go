// Copyright 2019 The Cockroach Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
// implied. See the License for the specific language governing
// permissions and limitations under the License.

package errors

import "github.com/cockroachdb/cockroach/pkg/errors/withstack"

// WithStack annotates err with a stack trace at the point WithStack
// was called.
var WithStack func(err error) error = withstack.WithStack

// WithStackDepth annotates err with a stack trace starting from the
// given call depth. The value zero includes the frame
// of WithStackDepth itself.
var WithStackDepth func(err error, depth int) error = withstack.WithStackDepth

// ReportableStackTrace aliases the type of the same name in the raven
// (Sentry) package.
type ReportableStackTrace = withstack.ReportableStackTrace

// GetOneLineSource extracts the file/line/function information
// of the topmost caller in the innermost recorded stack trace.
// This is used e.g. to populate the "source" field in
// PostgreSQL errors.
var GetOneLineSource func(err error) (file string, line int, fn string, ok bool) = withstack.GetOneLineSource

// GetReportableStackTrace extracts a stack trace embedded in the
// given error in the format suitable for raven/Sentry reporting.
//
// This supports:
// - errors generated by github.com/pkg/errors (either generated
//   locally or after transfer through the network),
// - errors generated with WithStack() in this package,
// - any other error that implements a StackTrace() method
//   returning a StackTrace from github.com/pkg/errors.
var GetReportableStackTrace func(err error) *ReportableStackTrace = withstack.GetReportableStackTrace
